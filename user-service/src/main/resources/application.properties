spring.application.name=user-service
server.port=8082


# Eureka Client Config
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.prefer-ip-address=true

# MySQL Datasource Config
spring.datasource.url=jdbc:mysql://localhost:3306/user_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate Config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


# H2 Console (DISABLE if using MySQL)
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# Actuator Endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


# Resilience4j Circuit Breaker Config for NotificationService
resilience4j.circuitbreaker.instances.notificationServiceCB.register-health-indicator=true
resilience4j.circuitbreaker.instances.notificationServiceCB.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.notificationServiceCB.sliding-window-size=10
resilience4j.circuitbreaker.instances.notificationServiceCB.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.notificationServiceCB.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.notificationServiceCB.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.notificationServiceCB.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.notificationServiceCB.automatic-transition-from-open-to-half-open-enabled=true

# Resilience4j Retry Config for NotificationService

resilience4j.retry.instances.notificationServiceRetry.max-attempts=3
resilience4j.retry.instances.notificationServiceRetry.wait-duration=2s
resilience4j.retry.instances.notificationServiceRetry.enable-exponential-backoff=true
resilience4j.retry.instances.notificationServiceRetry.exponential-backoff-multiplier=2

# JWT Secret
jwt.secret=OSk7Ld38/ypxEf1F8Lso0OcNP6C7xyaEYXkxZlYX2qw=
